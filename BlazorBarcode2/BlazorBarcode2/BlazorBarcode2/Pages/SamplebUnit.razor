@using Microsoft.JSInterop; 

@inject IJSRuntime jsRuntime;

<div id="canvas_layer_div" style="width: 100%;height: 700px;position:relative;width:100%; height:700px;position:relative;overflow:hidden;background:#ededed">
    <svg id="canvas_layer_svg" width="1000px" height="1000px" xmlns="http://www.w3.org/2000/svg">
        @if (@isRender)
        {
            <rect id="node" x="100px" y="100px" width="100px" height="100px" fill="blue" stroke-width="5"></rect>
        }
    </svg>
</div>

@code{

    public bool isRender { get; set; }
    [Parameter] public Task<bool> TextService { get; set; }
    public class SzObj
    {
        public bool isRendering { get; set; }
    }
    protected override async Task OnInitializedAsync()
    {
        if (TextService != null)
            isRender = await TextService;
        StateHasChanged();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var obj = await jsRuntime.InvokeAsync<SzObj>("render");
            isRender = obj != null ? true : false;
            StateHasChanged();
        }
    }
}